{
  "openapi": "3.0.0",
  "paths": {
    "/auth/register": {
      "post": {
        "operationId": "AuthController_register",
        "summary": "Register a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "409": {
            "description": "User already exists"
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "401": {
            "description": "Invalid credentials"
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthController_refresh",
        "summary": "Refresh access token",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens refreshed successfully"
          },
          "401": {
            "description": "Invalid refresh token"
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/me": {
      "get": {
        "operationId": "AuthController_getProfile",
        "summary": "Get user profile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/products": {
      "post": {
        "operationId": "ProductsController_create",
        "summary": "Create a new product (Admin only)",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "403": {
            "description": "Forbidden - Admin only"
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "ProductsController_findAll",
        "summary": "Get all products with pagination and search",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully"
          }
        },
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "ProductsController_findOne",
        "summary": "Get a product by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "tags": [
          "Products"
        ]
      },
      "patch": {
        "operationId": "ProductsController_update",
        "summary": "Update a product (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "403": {
            "description": "Forbidden - Admin only"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "delete": {
        "operationId": "ProductsController_remove",
        "summary": "Delete a product (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          },
          "403": {
            "description": "Forbidden - Admin only"
          },
          "404": {
            "description": "Product not found"
          }
        },
        "tags": [
          "Products"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/orders": {
      "post": {
        "operationId": "OrdersController_create",
        "summary": "Create a new order",
        "parameters": [
          {
            "name": "idempotency-key",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Idempotency-Key",
            "in": "header",
            "description": "Unique key to prevent duplicate orders within 5 seconds",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Order created successfully"
          },
          "400": {
            "description": "Invalid order data or insufficient stock"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "operationId": "OrdersController_findAll",
        "summary": "Get all orders (admin sees all, customers see their own)",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by order status",
            "schema": {
              "enum": [
                "PENDING",
                "PAID",
                "CANCELLED",
                "FULFILLED"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Orders retrieved successfully"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "operationId": "OrdersController_findOne",
        "summary": "Get an order by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order retrieved successfully"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/orders/{id}/status": {
      "patch": {
        "operationId": "OrdersController_updateStatus",
        "summary": "Update order status (Admin only)",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOrderStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Order status updated successfully"
          },
          "403": {
            "description": "Forbidden - Admin only"
          },
          "404": {
            "description": "Order not found"
          }
        },
        "tags": [
          "Orders"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "info": {
    "title": "Mini Orders API",
    "description": "Backend API for e-commerce service",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "RegisterDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "CreateProductDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "iPhone 15 Pro"
          },
          "description": {
            "type": "string",
            "example": "Latest Apple iPhone with advanced features"
          },
          "priceFils": {
            "type": "number",
            "example": 399900,
            "description": "Price in fils (1 AED = 100 fils)"
          },
          "stock": {
            "type": "number",
            "example": 50
          },
          "isActive": {
            "type": "boolean",
            "example": true,
            "default": true
          }
        },
        "required": [
          "title",
          "priceFils",
          "stock"
        ]
      },
      "UpdateProductDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "iPhone 15 Pro"
          },
          "description": {
            "type": "string",
            "example": "Latest Apple iPhone with advanced features"
          },
          "priceFils": {
            "type": "number",
            "example": 399900,
            "description": "Price in fils (1 AED = 100 fils)"
          },
          "stock": {
            "type": "number",
            "example": 50
          },
          "isActive": {
            "type": "boolean",
            "example": true,
            "default": true
          }
        }
      },
      "OrderItemDto": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "qty": {
            "type": "number",
            "example": 2,
            "minimum": 1
          }
        },
        "required": [
          "productId",
          "qty"
        ]
      },
      "CreateOrderDto": {
        "type": "object",
        "properties": {
          "items": {
            "example": [
              {
                "productId": "123e4567-e89b-12d3-a456-426614174000",
                "qty": 2
              },
              {
                "productId": "223e4567-e89b-12d3-a456-426614174001",
                "qty": 1
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItemDto"
            }
          }
        },
        "required": [
          "items"
        ]
      },
      "UpdateOrderStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "PAID",
              "CANCELLED",
              "FULFILLED"
            ],
            "example": "PAID",
            "description": "New status for the order"
          }
        },
        "required": [
          "status"
        ]
      }
    }
  }
}